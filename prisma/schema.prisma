generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  User              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  User         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Snippet {
  id          String   @id @default(cuid())
  title       String
  description String?
  content     String
  language    String
  tags        String[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime  @updatedAt
  userId      String?
  User        User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  shareToken  String?          @unique
  isPublic    Boolean         @default(false)
  versions    SnippetVersion[]
  favorites   Favorite[]

  @@index([language])
  @@index([tags])
  @@index([title])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  Account       Account[]
  Session       Session[]
  Snippet       Snippet[]
  snippetVersions SnippetVersion[]
  favorites       Favorite[]
}

model SnippetVersion {
 id        String   @id @default(cuid())
 snippetId String
 userId    String
 content   String
 createdAt DateTime @default(now())
 snippet   Snippet  @relation(fields: [snippetId], references: [id], onDelete: Cascade)
 user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Favorite {
 id        String   @id @default(cuid())
 userId    String
 snippetId String
 createdAt DateTime @default(now())
 snippet   Snippet  @relation(fields: [snippetId], references: [id], onDelete: Cascade)
 user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

 @@unique([userId, snippetId])
}